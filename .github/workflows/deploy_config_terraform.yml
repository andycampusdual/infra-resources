name: D.I.C. with terraform

on:
  push:
    branches:
    - staging
  #workflow_dispatch:

jobs:
  prepare:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Install jq
      run: sudo apt-get install -y jq

    - name: Prepare Dynamic Secret Names
      id: prepare
      run: |
        # Leer el archivo users.json para obtener los valores correspondientes al usuario
        USERNAME=$(jq -r ".${GITHUB_ACTOR}" ./docs/users.json)

        # Verificar si el USERNAME se ha encontrado
        if [ -z "$USERNAME" ]; then
          echo "El nombre de usuario no se encuentra en el archivo users.json"
          exit 1
        fi

        # Extraer los valores de AWS_ACCESS_KEY_ID, AWS_SECRET_ACCESS_KEY, y AWS_SESSION_TOKEN para el usuario
        AWS_ACCESS_KEY_ID_NAME_AUX=$(echo $USERNAME | jq -r '.AWS_ACCESS_KEY_ID')
        AWS_SECRET_ACCESS_KEY_NAME_AUX=$(echo $USERNAME | jq -r '.AWS_SECRET_ACCESS_KEY')
        AWS_SESSION_TOKEN_NAME_AUX=$(echo $USERNAME | jq -r '.AWS_SESSION_TOKEN')
        AWS_EC2_KEY_NAME_AUX=$(echo $USERNAME | jq -r '.AWS_EC2_KEY')

        echo "AWS_ACCESS_KEY_ID_NAME: $AWS_ACCESS_KEY_ID_NAME_AUX"
        echo "AWS_SECRET_ACCESS_KEY_NAME: $AWS_SECRET_ACCESS_KEY_NAME_AUX"
        echo "AWS_SESSION_TOKEN_NAME: $AWS_SESSION_TOKEN_NAME_AUX"
        echo "AWS_EC2_KEY_NAME: $AWS_EC2_KEY_NAME_AUX"

        echo "::set-output name=aws_access_key_id_name::${AWS_ACCESS_KEY_ID_NAME_AUX}"
        echo "::set-output name=aws_secret_access_key_name::${AWS_SECRET_ACCESS_KEY_NAME_AUX}"
        echo "::set-output name=aws_session_token_name::${AWS_SESSION_TOKEN_NAME_AUX}"
        echo "::set-output name=aws_ec2_key_name::${AWS_EC2_KEY_NAME_AUX}"

        # Guardar los valores como variables de entorno
        #echo "AWS_ACCESS_KEY_ID_NAME=${AWS_ACCESS_KEY_ID_NAME_AUX}" | tee $GITHUB_ENV
        #echo "AWS_SECRET_ACCESS_KEY_NAME=${AWS_SECRET_ACCESS_KEY_NAME_AUX}" | tee $GITHUB_ENV
        #echo "AWS_SESSION_TOKEN_NAME=${AWS_SESSION_TOKEN_NAME_AUX}" | tee $GITHUB_ENV

    outputs:
      aws_access_key_id_name: ${{ steps.prepare.outputs.AWS_ACCESS_KEY_ID_NAME }}
      aws_secret_access_key_name: ${{ steps.prepare.outputs.AWS_SECRET_ACCESS_KEY_NAME }}
      aws_session_token_name: ${{ steps.prepare.outputs.AWS_SESSION_TOKEN_NAME }}
      aws_ec2_key_name: ${{ steps.prepare.outputs.AWS_EC2_KEY_NAME }}

  deploy:
    needs: prepare
    runs-on: ubuntu-latest
    environment: STAGING

    # Define una variable de entorno para el directorio de trabajo
    env:
      TF_WORKING_DIR: terraform # Aquí defines tu directorio
      TF_WORKING_DIR2: modules/wordpress/ansible # Aquí defines tu directorio
      AWS_ACCESS_KEY_ID: ${{ needs.prepare.outputs.aws_access_key_id_name }}
      AWS_SECRET_ACCESS_KEY: ${{ needs.prepare.outputs.aws_secret_access_key_name }}
      AWS_SESSION_TOKEN: ${{ needs.prepare.outputs.aws_session_token_name }}
      AWS_EC2_KEY: ${{ needs.prepare.outputs.aws_ec2_key_name }}

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1

    - name: Install Ansible
      run: |
        sudo apt update
        sudo apt install -y software-properties-common
        sudo add-apt-repository --yes --update ppa:ansible/ansible
        sudo apt install -y ansible

    - name: Set up SSH private key
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets[env.AWS_EC2_KEY] }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        cp id_rsa.pub ~/.ssh/id_rsa.pub

    - name: Terraform Init
      run: |
        set -e # Detener la ejecución del script si algún comando falla
        export AWS_ACCESS_KEY_ID=${{ secrets[env.AWS_ACCESS_KEY_ID] }}
        export AWS_SECRET_ACCESS_KEY=${{ secrets[env.AWS_SECRET_ACCESS_KEY] }}
        export AWS_SESSION_TOKEN=${{ secrets[env.AWS_SESSION_TOKEN] }}
        echo "init"
        terraform init
        echo "apply"
        terraform apply -auto-approve -var-file=custom-vars.tfvars
      working-directory: ${{ env.TF_WORKING_DIR }} # Usando la variable de entorno
      env:
        TF_VAR_private_key: ~/.ssh/id_rsa # Pasamos la clave privada como variable de entorno
